services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:7.15.0
    command: -url=jdbc:postgresql://db:5432/mydatabase -user=admin -password=adminpassword -connectRetries=60 migrate -target=${MIGRATION_VERSION:-latest}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/flyway/sql

  seeder:
    image: seeder:latest
    build:
      context: .
      dockerfile: Dockerfile.seeder
    environment:
      - APP_ENV=${APP_ENV:-prod}
      - SEED_COUNT=${SEED_COUNT:-10}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=adminpassword
      - DB_NAME=mydatabase
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    command: sh -c "if [ \"$APP_ENV\" = \"dev\" ]; then /app/seeder; fi"

  role_setup:
    image: postgres:13
    environment:
      - PGHOST=db
      - PGPORT=5432
      - PGUSER=admin
      - PGPASSWORD=adminpassword
      - PGDB=mydatabase
      - ANALYST_NAMES=${ANALYST_NAMES:-}
    volumes:
      - ./scripts/create_analytic_role.sql:/create_analytic_role.sql
      - ./scripts/create_analyst_users.sh:/create_analyst_users.sh
    command: >
      sh -c "psql -h db -p 5432 -U admin -d mydatabase -f /create_analytic_role.sql &&
             chmod +x /create_analyst_users.sh &&
             /create_analyst_users.sh"
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully

volumes:
  postgres_data:
