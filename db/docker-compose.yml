services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_INIT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_INIT_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_INIT_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:7.15.0
    command: -url=jdbc:postgresql://db:5432/${POSTGRES_DB} -user=${DB_USER} -password=${DB_PASSWORD} -connectRetries=60 migrate -target=${MIGRATION_VERSION:-latest}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/flyway/sql

  seeder:
    image: seeder:latest
    build:
      context: .
      dockerfile: Dockerfile.seeder
    environment:
      - APP_ENV=${APP_ENV}
      - SEED_COUNT=${SEED_COUNT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    command: sh -c "if [ \"$APP_ENV\" = \"dev\" ]; then /app/seeder; fi"

  role_setup:
    image: postgres:13
    environment:
      - PGHOST=${DB_HOST}
      - PGPORT=${DB_PORT}
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGDB=${DB_NAME}
      - ANALYST_NAMES=${ANALYST_NAMES}
    volumes:
      - ./scripts/create_analytic_role.sql:/create_analytic_role.sql
      - ./scripts/create_analyst_users.sh:/create_analyst_users.sh
    command: >
      sh -c "psql -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USER} -d ${DB_NAME} -f /create_analytic_role.sql &&
             chmod +x /create_analyst_users.sh &&
             /create_analyst_users.sh"
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully

volumes:
  postgres_data:
